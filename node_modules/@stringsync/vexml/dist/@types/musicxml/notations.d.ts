import { VerticalDirection } from './enums';
import { NamedElement } from '../util';
import { Tuplet } from './tuplet';
import { Slur } from './slur';
import { Ornaments } from './ornaments';
import { Tied } from './tied';
import { Fermata } from './fermata';
import { Articulations } from './articulations';
import { AccidentalMark } from './accidentalmark';
import { Technical } from './technical';
import { Slide } from './slide';
/**
 * Musical notations that apply to a specific note or chord.
 *
 * See https://www.w3.org/2021/06/musicxml40/musicxml-reference/elements/notations/
 */
export declare class Notations {
    private element;
    constructor(element: NamedElement<'notations'>);
    /** Whether or not the note/chord is arpeggiated. */
    isArpeggiated(): boolean;
    /** Returns the direction of the arppegio. Defaults to null. */
    getArpeggioDirection(): VerticalDirection | null;
    /** Whether the notations has at least one tuplet. */
    hasTuplets(): boolean;
    /** Returns the tuplets of the notations. Defaults to an empty array. */
    getTuplets(): Tuplet[];
    /** Returns the slurs of the notations. Defaults to an empty array. */
    getSlurs(): Slur[];
    /** Returns the tieds of the notations. Defaults to an empty array. */
    getTieds(): Tied[];
    /** Returns the ornaments of the notations. Defaults to an empty array. */
    getOrnaments(): Ornaments[];
    /** Returns the fermatas of the notations. Defaults to an empty array. */
    getFermatas(): Fermata[];
    /** Returns the articulations of the notations. Defaults to an empty array. */
    getArticulations(): Articulations[];
    /** Returns the accidental marks of the notations (not ornaments). */
    getAccidentalMarks(): AccidentalMark[];
    /** Returns the technicals of the notations. */
    getTechnicals(): Technical[];
    /** Returns the slides of the notations. */
    getSlides(): Slide[];
}
