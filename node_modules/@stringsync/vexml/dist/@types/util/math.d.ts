/** A slightly more readable version of Math.max that ignores NaN values. */
export declare const max: (values: number[], initial?: number) => number;
/** A slightly more readable version of Math.min that ignores NaN values. */
export declare const min: (values: number[], initial?: number) => number;
/** Ensures a number is within a range. */
export declare const clamp: (min: number, max: number, value: number) => number;
/** Computes the sum of the numbers, filtering out NaNs. */
export declare const sum: (values: number[], initial?: number) => number;
/** Returns the greatest common denominator. */
export declare const gcd: (a: number, b: number) => number;
/** Returns the least common mulitple between the numbers. */
export declare const lcm: (a: number, b: number) => number;
/** Interpolates between a and b. */
export declare const lerp: (a: number, b: number, alpha: number) => number;
