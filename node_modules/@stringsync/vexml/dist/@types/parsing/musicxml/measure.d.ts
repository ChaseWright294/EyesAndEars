import * as data from '../../data';
import { MeasureEvent } from './types';
import { Signature } from './signature';
import { SystemContext } from './contexts';
import { JumpGroup } from './jumpgroup';
import { Config } from '../../config';
import { Logger } from '../../debug';
export declare class Measure {
    private config;
    private log;
    private initialSignature;
    private index;
    private label;
    private events;
    private jumpGroup;
    private startBarlineStyle;
    private endBarlineStyle;
    private fragments;
    private repetitionSymbols;
    private constructor();
    static create(config: Config, log: Logger, initialSignature: Signature, index: number, label: number | null, events: MeasureEvent[], partIds: string[], jumpGroup: JumpGroup, startBarlineStyle: data.BarlineStyle | null, endBarlineStyle: data.BarlineStyle | null): Measure;
    private static fragmentize;
    getEvents(): MeasureEvent[];
    getLastSignature(): Signature;
    parse(systemCtx: SystemContext): data.Measure;
}
