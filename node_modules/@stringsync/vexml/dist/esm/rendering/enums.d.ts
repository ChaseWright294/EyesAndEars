import { Enum, EnumValues } from '../util';
/**
 * The direction of the stem of a note.
 */
export type StemDirection = EnumValues<typeof STEM_DIRECTIONS>;
export declare const STEM_DIRECTIONS: Enum<readonly ["auto", "up", "down", "none"]>;
/**
 * The translation of the clef sign and line.
 *
 * See https://github.com/0xfe/vexflow/blob/ea48402cb22a312249719fdbdb0766240678156d/src/clef.ts#L68
 */
export type ClefSign = EnumValues<typeof CLEF_SIGNS>;
export declare const CLEF_SIGNS: Enum<readonly ["treble", "french", "subbass", "baritone-f", "bass", "baritone-c", "tenor", "mezzo-soprano", "soprano", "alto", "percussion", "tab"]>;
/**
 * The accidental code from VexFlow. The list only contains typical accidentals from Western music and is currently not
 * exhaustive.
 *
 * See https://github.com/0xfe/vexflow/blob/17755d786eae1670ee20e8101463b3368f2c06e5/src/tables.ts#L169
 */
export type AccidentalCode = EnumValues<typeof ACCIDENTAL_CODES>;
export declare const ACCIDENTAL_CODES: Enum<readonly ["#", "##", "b", "bb", "n", "d", "_", "db", "+", "++"]>;
/** The different inputs a device could be interacting with a vexml rendering. */
export type InputType = EnumValues<typeof INPUT_TYPES>;
export declare const INPUT_TYPES: Enum<readonly ["auto", "mouse", "touch", "hybrid", "none"]>;
