/* eslint-disable @typescript-eslint/no-unused-vars */
import * as vexflow from 'vexflow';
export class NoopRenderContext extends vexflow.RenderContext {
    clear() { }
    setFillStyle(style) {
        return this;
    }
    setBackgroundFillStyle(style) {
        return this;
    }
    setStrokeStyle(style) {
        return this;
    }
    setShadowColor(color) {
        return this;
    }
    setShadowBlur(blur) {
        return this;
    }
    setLineWidth(width) {
        return this;
    }
    setLineCap(capType) {
        return this;
    }
    setLineDash(dashPattern) {
        return this;
    }
    scale(x, y) {
        return this;
    }
    rect(x, y, width, height) {
        return this;
    }
    resize(width, height) {
        return this;
    }
    fillRect(x, y, width, height) {
        return this;
    }
    clearRect(x, y, width, height) {
        return this;
    }
    pointerRect(x, y, width, height) {
        return this;
    }
    beginPath() {
        return this;
    }
    moveTo(x, y) {
        return this;
    }
    lineTo(x, y) {
        return this;
    }
    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {
        return this;
    }
    quadraticCurveTo(cpx, cpy, x, y) {
        return this;
    }
    arc(x, y, radius, startAngle, endAngle, counterclockwise) {
        return this;
    }
    fill(attributes) {
        return this;
    }
    stroke() {
        return this;
    }
    closePath() {
        return this;
    }
    fillText(text, x, y) {
        return this;
    }
    save() {
        return this;
    }
    restore() {
        return this;
    }
    openGroup(cls, id) { }
    closeGroup() { }
    openRotation(angleDegrees, x, y) { }
    closeRotation() { }
    add(child) { }
    measureText(text) {
        return { x: 0, y: 0, width: 0, height: 0 };
    }
    set fillStyle(style) { }
    get fillStyle() {
        return '';
    }
    set strokeStyle(style) { }
    get strokeStyle() {
        return '';
    }
    setFont(f, size, weight, style) {
        return this;
    }
    getFont() {
        return '';
    }
}
