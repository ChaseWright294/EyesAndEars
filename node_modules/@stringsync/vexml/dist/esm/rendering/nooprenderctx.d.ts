import * as vexflow from 'vexflow';
export declare class NoopRenderContext extends vexflow.RenderContext {
    clear(): void;
    setFillStyle(style: string): this;
    setBackgroundFillStyle(style: string): this;
    setStrokeStyle(style: string): this;
    setShadowColor(color: string): this;
    setShadowBlur(blur: number): this;
    setLineWidth(width: number): this;
    setLineCap(capType: CanvasLineCap): this;
    setLineDash(dashPattern: number[]): this;
    scale(x: number, y: number): this;
    rect(x: number, y: number, width: number, height: number): this;
    resize(width: number, height: number): this;
    fillRect(x: number, y: number, width: number, height: number): this;
    clearRect(x: number, y: number, width: number, height: number): this;
    pointerRect(x: number, y: number, width: number, height: number): this;
    beginPath(): this;
    moveTo(x: number, y: number): this;
    lineTo(x: number, y: number): this;
    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): this;
    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): this;
    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise: boolean): this;
    fill(attributes?: any): this;
    stroke(): this;
    closePath(): this;
    fillText(text: string, x: number, y: number): this;
    save(): this;
    restore(): this;
    openGroup(cls?: string, id?: string): void;
    closeGroup(): void;
    openRotation(angleDegrees: number, x: number, y: number): void;
    closeRotation(): void;
    add(child: any): void;
    measureText(text: string): vexflow.TextMeasure;
    set fillStyle(style: string | CanvasGradient | CanvasPattern);
    get fillStyle(): string | CanvasGradient | CanvasPattern;
    set strokeStyle(style: string | CanvasGradient | CanvasPattern);
    get strokeStyle(): string | CanvasGradient | CanvasPattern;
    setFont(f?: string | vexflow.FontInfo, size?: string | number, weight?: string | number, style?: string): this;
    getFont(): string;
}
