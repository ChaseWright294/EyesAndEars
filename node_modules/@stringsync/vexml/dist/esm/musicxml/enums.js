import { Enum } from '../util';
export const STEMS = new Enum(['up', 'down', 'double', 'none']);
export const NOTE_TYPES = new Enum([
    '1024th',
    '512th',
    '256th',
    '128th',
    '64th',
    '32nd',
    '16th',
    'eighth',
    'quarter',
    'half',
    'whole',
    'breve',
    'long',
    'maxima',
]);
export const ACCIDENTAL_TYPES = new Enum([
    'sharp',
    'natural',
    'flat',
    'double-sharp',
    'sharp-sharp',
    'flat-flat',
    'natural-sharp',
    'natural-flat',
    'quarter-flat',
    'quarter-sharp',
    'three-quarters-flat',
    'three-quarters-sharp',
    'sharp-down',
    'sharp-up',
    'natural-down',
    'natural-up',
    'flat-down',
    'flat-up',
    'double-sharp-down',
    'double-sharp-up',
    'flat-flat-down',
    'flat-flat-up',
    'arrow-down',
    'arrow-up',
    'triple-sharp',
    'triple-flat',
    'slash-quarter-sharp',
    'slash-sharp',
    'slash-flat',
    'double-slash-flat',
    'flat-1',
    'flat-2',
    'flat-3',
    'flat-4',
    'sori',
    'koron',
    'other',
]);
export const NOTEHEADS = new Enum([
    'arrow down',
    'arrow up',
    'back slashed',
    'circle dot',
    'circle-x',
    'circled',
    'cluster',
    'cross',
    'diamond',
    'do',
    'fa',
    'fa up',
    'inverted triangle',
    'la',
    'left triangle',
    'mi',
    'none',
    'normal',
    're',
    'rectangle',
    'slash',
    'slashed',
    'so',
    'square',
    'ti',
    'triangle',
    'x',
    'other',
]);
export const BAR_STYLES = new Enum([
    'dashed',
    'dotted',
    'heavy',
    'heavy-heavy',
    'heavy-light',
    'light-heavy',
    'light-light',
    'none',
    'regular',
    'short',
    'tick',
]);
export const VERTICAL_DIRECTIONS = new Enum(['up', 'down']);
export const REPEAT_DIRECTIONS = new Enum(['backward', 'forward']);
export const BARLINE_LOCATIONS = new Enum(['right', 'left', 'middle']);
export const START_STOP_DISCONTINUE = new Enum(['start', 'stop', 'discontinue']);
export const CLEF_SIGNS = new Enum(['G', 'F', 'C', 'percussion', 'TAB', 'jianpu', 'none']);
export const BEAM_VALUES = new Enum(['backward hook', 'begin', 'continue', 'end', 'forward hook']);
export const STAVE_TYPES = new Enum(['alternate', 'cue', 'editorial', 'ossia', 'regular']);
export const SYLLABIC_TYPES = new Enum(['begin', 'end', 'middle', 'single']);
export const TIME_SYMBOLS = new Enum([
    'common',
    'cut',
    'dotted-note',
    'normal',
    'note',
    'single-number',
    'hidden',
]);
export const KEY_MODES = new Enum([
    'none',
    'major',
    'minor',
    'dorian',
    'phrygian',
    'lydian',
    'mixolydian',
    'aeolian',
    'ionian',
    'locrian',
]);
export const START_STOP = new Enum(['start', 'stop']);
export const ABOVE_BELOW = new Enum(['above', 'below']);
export const OVER_UNDER = new Enum(['over', 'under']);
export const START_STOP_CONTINUE = new Enum(['start', 'stop', 'continue']);
export const LINE_TYPES = new Enum(['dashed', 'dotted', 'solid', 'wavy']);
export const WEDGE_TYPES = new Enum(['crescendo', 'diminuendo', 'stop', 'continue']);
export const UP_DOWN_STOP_CONTINUE = new Enum(['up', 'down', 'stop', 'continue']);
export const PEDAL_TYPES = new Enum([
    'start',
    'stop',
    'sostenuto',
    'change',
    'continue',
    'discontinue',
    'resume',
]);
export const SHOW_TUPLET = new Enum(['actual', 'both', 'none']);
export const TIED_TYPES = new Enum(['start', 'stop', 'continue', 'let-ring']);
export const FERMATA_SHAPES = new Enum([
    'normal',
    'angled',
    'square',
    'double-angled',
    'double-square',
    'double-dot',
    'half-curve',
    'curlew',
]);
export const FERMATA_TYPES = new Enum(['upright', 'inverted']);
export const HARMONIC_TYPES = new Enum(['unspecified', 'natural', 'artificial']);
export const HARMONIC_PITCH_TYPES = new Enum(['unspecified', 'base', 'touching', 'sounding']);
export const BEND_TYPES = new Enum(['normal', 'pre-bend', 'release']);
export const DYNAMIC_TYPES = new Enum([
    'p',
    'pp',
    'ppp',
    'pppp',
    'ppppp',
    'pppppp',
    'f',
    'ff',
    'fff',
    'ffff',
    'fffff',
    'ffffff',
    'mp',
    'mf',
    'sf',
    'sfp',
    'sfpp',
    'fp',
    'rf',
    'rfz',
    'sfz',
    'sffz',
    'fz',
    'n',
    'pf',
    'sfzp',
]);
