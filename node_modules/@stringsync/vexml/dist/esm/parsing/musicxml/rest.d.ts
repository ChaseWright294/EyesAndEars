import * as data from '../../data';
import * as util from '../../util';
import * as musicxml from '../../musicxml';
import { Pitch } from './pitch';
import { VoiceContext } from './contexts';
import { Time } from './time';
import { Beam } from './beam';
import { Tuplet } from './tuplet';
import { Config } from '../../config';
import { Logger } from '../../debug';
export declare class Rest {
    private config;
    private log;
    private measureBeat;
    private durationType;
    private dotCount;
    private duration;
    private displayPitch;
    private beam;
    private tuplets;
    constructor(config: Config, log: Logger, measureBeat: util.Fraction, durationType: data.DurationType, dotCount: number, duration: util.Fraction, displayPitch: Pitch | null, beam: Beam | null, tuplets: Tuplet[]);
    static create(config: Config, log: Logger, measureBeat: util.Fraction, duration: util.Fraction, musicXML: {
        note: musicxml.Note;
    }): Rest;
    static whole(config: Config, log: Logger, time: Time): Rest;
    parse(voiceCtx: VoiceContext): data.Rest;
    private getMeasureBeat;
    private getDuration;
}
