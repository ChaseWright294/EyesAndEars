import * as components from '../components';
import { EventListener } from '../events';
import { EventMap } from './types';
import { Locator } from './locator';
import { TimestampLocator } from '../playback';
import { Config } from '../config';
export declare class Events {
    private config;
    private root;
    private vexmlEventTopic;
    private nativeEventTopic;
    private bridge;
    private constructor();
    static create(config: Config, root: components.Root, elementLocator: Locator, timestampLocator: TimestampLocator): Events;
    addEventListener<N extends keyof EventMap>(type: N, listener: EventListener<EventMap[N]>): number;
    removeEventListener(...ids: number[]): void;
    removeAllEventListeners(): void;
    dispatchNativeEvent(event: Event): void;
}
