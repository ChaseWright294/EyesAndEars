import * as schema from './schema';
export type Config = schema.SchemaConfig<typeof CONFIG>;
export declare const CONFIG: {
    DRAWING_BACKEND: {
        readonly type: "enum";
        readonly choices: readonly ["svg", "canvas"];
        readonly defaultValue: "svg";
        readonly help: string;
    };
    WIDTH: {
        readonly type: "number";
        readonly defaultValue: any;
        readonly help: string;
    };
    HEIGHT: {
        readonly type: "number";
        readonly defaultValue: any;
        readonly help: string;
    };
    INPUT_TYPE: {
        readonly type: "enum";
        readonly choices: readonly ["auto", "mouse", "touch", "hybrid", "none"];
        readonly defaultValue: "auto";
        readonly help: string;
    };
    DEFAULT_PLAYBACK_BPM: {
        readonly type: "number";
        readonly defaultValue: 100;
        readonly help: string;
    };
    SCORE_PADDING_TOP: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    SCORE_PADDING_BOTTOM: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    TITLE_FONT_FAMILY: {
        readonly type: "string";
        readonly defaultValue: "Arial";
        readonly help: string;
    };
    TITLE_FONT_SIZE: {
        readonly type: "string";
        readonly defaultValue: "36px";
        readonly help: string;
    };
    TITLE_FONT_LINE_HEIGHT_PX: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    TITLE_PADDING_BOTTOM: {
        readonly type: "number";
        readonly defaultValue: 20;
        readonly help: string;
    };
    SYSTEM_MARGIN_BOTTOM: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    LAST_SYSTEM_WIDTH_STRETCH_THRESHOLD: {
        readonly type: "number";
        readonly defaultValue: 0.75;
        readonly help: string;
    };
    PART_LABEL_FONT_FAMILY: {
        readonly type: "string";
        readonly defaultValue: "Arial";
        readonly help: string;
    };
    PART_LABEL_FONT_SIZE: {
        readonly type: "string";
        readonly defaultValue: "13px";
        readonly help: string;
    };
    PART_LABEL_PADDING_RIGHT: {
        readonly type: "number";
        readonly defaultValue: 8;
        readonly help: string;
    };
    PART_LABEL_ALIGNMENT: {
        readonly type: "enum";
        readonly choices: readonly ["right", "left"];
        readonly defaultValue: "right";
        readonly help: string;
    };
    PART_MARGIN_BOTTOM: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    DEFAULT_STAVE_MARGIN_BOTTOM: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    BASE_VOICE_WIDTH: {
        readonly type: "number";
        readonly defaultValue: 80;
        readonly help: string;
    };
    BASE_MULTI_REST_MEASURE_WIDTH: {
        readonly type: "number";
        readonly defaultValue: 150;
        readonly help: string;
    };
    SHOW_TAB_CLEF: {
        readonly type: "boolean";
        readonly defaultValue: true;
        readonly help: string;
    };
    SHOW_TAB_TIME_SIGNATURE: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    SHOW_TAB_STEMS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    MEASURE_LABELING_SCHEME: {
        readonly type: "enum";
        readonly choices: readonly ["all", "every2", "every3", "system", "none"];
        readonly defaultValue: "all";
        readonly help: string;
    };
    DEFAULT_GAP_OVERLAY_FONT_SIZE: {
        readonly type: "string";
        readonly defaultValue: "12px";
        readonly help: string;
    };
    DEFAULT_GAP_OVERLAY_FONT_FAMILY: {
        readonly type: "string";
        readonly defaultValue: "Arial";
        readonly help: string;
    };
    DEFAULT_GAP_OVERLAY_FONT_COLOR: {
        readonly type: "string";
        readonly defaultValue: "black";
        readonly help: string;
    };
    DEFAULT_GAP_OVERLAY_FILL_COLOR: {
        readonly type: "string";
        readonly defaultValue: "rgba(255, 255, 255, 0.95)";
        readonly help: string;
    };
    DEBUG_DRAW_SYSTEM_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_MEASURE_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_FRAGMENT_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_PART_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_STAVE_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_STAVE_INTRINSIC_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_STAVE_PLAYABLE_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_VOICE_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_VOICE_ENTRY_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
};
export declare const DEFAULT_CONFIG: schema.SchemaConfig<{
    DRAWING_BACKEND: {
        readonly type: "enum";
        readonly choices: readonly ["svg", "canvas"];
        readonly defaultValue: "svg";
        readonly help: string;
    };
    WIDTH: {
        readonly type: "number";
        readonly defaultValue: any;
        readonly help: string;
    };
    HEIGHT: {
        readonly type: "number";
        readonly defaultValue: any;
        readonly help: string;
    };
    INPUT_TYPE: {
        readonly type: "enum";
        readonly choices: readonly ["auto", "mouse", "touch", "hybrid", "none"];
        readonly defaultValue: "auto";
        readonly help: string;
    };
    DEFAULT_PLAYBACK_BPM: {
        readonly type: "number";
        readonly defaultValue: 100;
        readonly help: string;
    };
    SCORE_PADDING_TOP: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    SCORE_PADDING_BOTTOM: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    TITLE_FONT_FAMILY: {
        readonly type: "string";
        readonly defaultValue: "Arial";
        readonly help: string;
    };
    TITLE_FONT_SIZE: {
        readonly type: "string";
        readonly defaultValue: "36px";
        readonly help: string;
    };
    TITLE_FONT_LINE_HEIGHT_PX: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    TITLE_PADDING_BOTTOM: {
        readonly type: "number";
        readonly defaultValue: 20;
        readonly help: string;
    };
    SYSTEM_MARGIN_BOTTOM: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    LAST_SYSTEM_WIDTH_STRETCH_THRESHOLD: {
        readonly type: "number";
        readonly defaultValue: 0.75;
        readonly help: string;
    };
    PART_LABEL_FONT_FAMILY: {
        readonly type: "string";
        readonly defaultValue: "Arial";
        readonly help: string;
    };
    PART_LABEL_FONT_SIZE: {
        readonly type: "string";
        readonly defaultValue: "13px";
        readonly help: string;
    };
    PART_LABEL_PADDING_RIGHT: {
        readonly type: "number";
        readonly defaultValue: 8;
        readonly help: string;
    };
    PART_LABEL_ALIGNMENT: {
        readonly type: "enum";
        readonly choices: readonly ["right", "left"];
        readonly defaultValue: "right";
        readonly help: string;
    };
    PART_MARGIN_BOTTOM: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    DEFAULT_STAVE_MARGIN_BOTTOM: {
        readonly type: "number";
        readonly defaultValue: 40;
        readonly help: string;
    };
    BASE_VOICE_WIDTH: {
        readonly type: "number";
        readonly defaultValue: 80;
        readonly help: string;
    };
    BASE_MULTI_REST_MEASURE_WIDTH: {
        readonly type: "number";
        readonly defaultValue: 150;
        readonly help: string;
    };
    SHOW_TAB_CLEF: {
        readonly type: "boolean";
        readonly defaultValue: true;
        readonly help: string;
    };
    SHOW_TAB_TIME_SIGNATURE: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    SHOW_TAB_STEMS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    MEASURE_LABELING_SCHEME: {
        readonly type: "enum";
        readonly choices: readonly ["all", "every2", "every3", "system", "none"];
        readonly defaultValue: "all";
        readonly help: string;
    };
    DEFAULT_GAP_OVERLAY_FONT_SIZE: {
        readonly type: "string";
        readonly defaultValue: "12px";
        readonly help: string;
    };
    DEFAULT_GAP_OVERLAY_FONT_FAMILY: {
        readonly type: "string";
        readonly defaultValue: "Arial";
        readonly help: string;
    };
    DEFAULT_GAP_OVERLAY_FONT_COLOR: {
        readonly type: "string";
        readonly defaultValue: "black";
        readonly help: string;
    };
    DEFAULT_GAP_OVERLAY_FILL_COLOR: {
        readonly type: "string";
        readonly defaultValue: "rgba(255, 255, 255, 0.95)";
        readonly help: string;
    };
    DEBUG_DRAW_SYSTEM_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_MEASURE_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_FRAGMENT_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_PART_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_STAVE_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_STAVE_INTRINSIC_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_STAVE_PLAYABLE_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_VOICE_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
    DEBUG_DRAW_VOICE_ENTRY_RECTS: {
        readonly type: "boolean";
        readonly defaultValue: false;
        readonly help: string;
    };
}>;
