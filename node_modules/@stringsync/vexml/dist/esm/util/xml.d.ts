import { NamedElement } from './namedelement';
/** Creates a document node. */
export declare const createDocument: () => Document;
/** Creates an XML element with the specified tag name. */
export declare const createElement: (tagName: string) => Element;
/** Creates a NamedElement with the specified tag name. */
export declare const createNamedElement: <T extends string>(tagName: T) => NamedElement<T>;
export declare const musicXML: (scorePartwise: NamedElement<"score-partwise">) => Document;
export declare const scorePartwise: (args?: Partial<{
    parts: NamedElement<"part">[];
    partList: NamedElement<"part-list">;
    defaults: NamedElement<"defaults">;
}>) => NamedElement<"score-partwise">;
export declare const partList: (args?: Partial<{
    scoreParts: NamedElement<"score-part">[];
}>) => NamedElement<"part-list">;
export declare const scorePart: (args?: Partial<{
    id: string;
    partName: NamedElement<"part-name">;
}>) => NamedElement<"score-part">;
export declare const partName: (args?: Partial<{
    textContent: string;
}>) => NamedElement<"part-name">;
export declare const part: (args?: Partial<{
    id: string;
    measures: NamedElement<"measure">[];
}>) => NamedElement<"part">;
export declare const measure: (args?: Partial<{
    width: number;
    number: string;
    implicit: string;
    entries: Array<NamedElement<"attributes"> | NamedElement<"note"> | NamedElement<"backup"> | NamedElement<"forward"> | NamedElement<"direction">>;
    notes: NamedElement<"note">[];
    attributes: NamedElement<"attributes">[];
    barlines: NamedElement<"barline">[];
    prints: NamedElement<"print">[];
}>) => NamedElement<"measure">;
export declare const note: (args?: Partial<{
    printObject: string;
    type: NamedElement<"type">;
    stem: NamedElement<"stem">;
    dots: NamedElement<"dot">[];
    rest: NamedElement<"rest">;
    pitch: NamedElement<"pitch">;
    accidental: NamedElement<"accidental">;
    timeModification: NamedElement<"time-modification">;
    notehead: NamedElement<"notehead">;
    grace: NamedElement<"grace">;
    duration: NamedElement<"duration">;
    notations: NamedElement<"notations">[];
    voice: NamedElement<"voice">;
    staff: NamedElement<"staff">;
    beams: NamedElement<"beam">[];
    chord: NamedElement<"chord">;
    lyrics: NamedElement<"lyric">[];
}>) => NamedElement<"note">;
export declare const backup: (args?: Partial<{
    duration: NamedElement<"duration">;
}>) => NamedElement<"backup">;
export declare const forward: (args?: Partial<{
    duration: NamedElement<"duration">;
}>) => NamedElement<"forward">;
export declare const type: (args?: Partial<{
    textContent: string;
}>) => NamedElement<"type">;
export declare const attributes: (args?: Partial<{
    divisions: NamedElement<"divisions">;
    staves: NamedElement<"staves">;
    clefs: NamedElement<"clef">[];
    times: NamedElement<"time">[];
    keys: NamedElement<"key">[];
    staffDetails: NamedElement<"staff-details">[];
    measureStyles: NamedElement<"measure-style">[];
}>) => NamedElement<"attributes">;
export declare const divisions: (args?: Partial<{
    positiveDivisions: number;
}>) => NamedElement<"divisions">;
export declare const print: (args?: Partial<{
    newSystem: boolean;
    newPage: boolean;
    systemLayout: NamedElement<"system-layout">;
    staffLayouts: NamedElement<"staff-layout">[];
}>) => NamedElement<"print">;
export declare const defaults: (args?: Partial<{
    systemLayout: NamedElement<"system-layout">;
    staffLayouts: NamedElement<"staff-layout">[];
}>) => NamedElement<"defaults">;
export declare const staffLayout: (args?: Partial<{
    number: number;
    staffDistance: NamedElement<"staff-distance">;
}>) => NamedElement<"staff-layout">;
export declare const staffDistance: (args?: Partial<{
    value: string;
}>) => NamedElement<"staff-distance">;
export declare const systemLayout: (args?: Partial<{
    systemMargins: NamedElement<"system-margins">;
    systemDistance: NamedElement<"system-distance">;
    topSystemDistance: NamedElement<"top-system-distance">;
    systemDividers: NamedElement<"system-dividers">;
}>) => NamedElement<"system-layout">;
export declare const systemMargins: (args?: Partial<{
    leftMargin: NamedElement<"left-margin">;
    rightMargin: NamedElement<"right-margin">;
}>) => NamedElement<"system-margins">;
export declare const leftMargin: (args?: Partial<{
    tenths: number;
}>) => NamedElement<"left-margin">;
export declare const rightMargin: (args?: Partial<{
    tenths: number;
}>) => NamedElement<"right-margin">;
export declare const systemDistance: (args?: Partial<{
    tenths: number;
}>) => NamedElement<"system-distance">;
export declare const topSystemDistance: (args?: Partial<{
    tenths: number;
}>) => NamedElement<"top-system-distance">;
export declare const direction: (args?: Partial<{
    placement: string;
    types: NamedElement<"direction-type">[];
}>) => NamedElement<"direction">;
export declare const directionType: (args?: Partial<{
    segnos: NamedElement<"segno">[];
    codas: NamedElement<"coda">[];
    wedge: NamedElement<"wedge">;
    pedal: NamedElement<"pedal">;
    metronome: NamedElement<"metronome">;
    octaveShift: NamedElement<"octave-shift">;
    tokens: Array<NamedElement<"words"> | NamedElement<"symbol">>;
}>) => NamedElement<"direction-type">;
export declare const words: (args?: Partial<{
    content: string;
}>) => NamedElement<"words">;
export declare const symbolic: (args?: Partial<{
    smuflGlyphName: string;
}>) => NamedElement<"symbol">;
export declare const metronome: (args?: Partial<{
    parentheses: string;
    content: NamedElement<"beat-unit" | "beat-unit-dot" | "per-minute">[];
}>) => NamedElement<"metronome">;
export declare const beatUnit: (args?: Partial<{
    noteTypeValue: string;
}>) => NamedElement<"beat-unit">;
export declare const beatUnitDot: (args?: Partial<Record<string, never>>) => NamedElement<"beat-unit-dot">;
export declare const perMinute: (args?: Partial<{
    value: string;
}>) => NamedElement<"per-minute">;
export declare const barline: (args?: Partial<{
    location: string;
    barStyle: NamedElement<"bar-style">;
    repeat: NamedElement<"repeat">;
    ending: NamedElement<"ending">;
}>) => NamedElement<"barline">;
export declare const staves: (args?: Partial<{
    staveCount: number;
}>) => NamedElement<"staves">;
export declare const barStyle: (args?: Partial<{
    value: string;
}>) => NamedElement<"bar-style">;
export declare const repeat: (args?: Partial<{
    direction: string;
}>) => NamedElement<"repeat">;
export declare const ending: (args?: Partial<{
    number: string;
    type: string;
    textContent: string;
}>) => NamedElement<"ending">;
export declare const stem: (args?: Partial<{
    value: string;
}>) => NamedElement<"stem">;
export declare const dot: (args?: Partial<Record<never, never>>) => NamedElement<"dot">;
export declare const rest: (args?: Partial<{
    displayStep: NamedElement<"display-step">;
    displayOctave: NamedElement<"display-octave">;
}>) => NamedElement<"rest">;
export declare const displayStep: (args?: Partial<{
    step: string;
}>) => NamedElement<"display-step">;
export declare const displayOctave: (args?: Partial<{
    octave: string;
}>) => NamedElement<"display-octave">;
export declare const pitch: (args?: Partial<{
    step: NamedElement<"step">;
    alter: NamedElement<"alter">;
    octave: NamedElement<"octave">;
}>) => NamedElement<"pitch">;
export declare const step: (args?: Partial<{
    value: string;
}>) => NamedElement<"step">;
export declare const alter: (args?: Partial<{
    value: number;
}>) => NamedElement<"alter">;
export declare const octave: (args?: Partial<{
    value: number;
}>) => NamedElement<"octave">;
export declare const accidental: (args?: Partial<{
    value: string;
    cautionary: string;
}>) => NamedElement<"accidental">;
export declare const grace: (args?: Partial<{
    slash: string;
}>) => NamedElement<"grace">;
export declare const duration: (args?: Partial<{
    positiveDivisions: number;
}>) => NamedElement<"duration">;
export declare const key: (args?: Partial<{
    fifths: NamedElement<"fifths">;
    mode: NamedElement<"mode">;
}>) => NamedElement<"key">;
export declare const fifths: (args?: Partial<{
    value: string;
}>) => NamedElement<"fifths">;
export declare const mode: (args?: Partial<{
    value: string;
}>) => NamedElement<"mode">;
export declare const time: (args?: Partial<{
    staveNumber: number;
    symbol: string;
    senzaMisura: NamedElement<"senza-misura">;
    times: Array<{
        beats?: NamedElement<"beats">;
        beatType?: NamedElement<"beat-type">;
    }>;
}>) => NamedElement<"time">;
export declare const senzaMisura: (args?: Partial<{
    content: string;
}>) => NamedElement<"senza-misura">;
export declare const clef: (args?: Partial<{
    number: number;
    sign: NamedElement<"sign">;
    line: NamedElement<"line">;
    clefOctaveChange: NamedElement<"clef-octave-change">;
}>) => NamedElement<"clef">;
export declare const coda: (args?: Partial<Record<never, never>>) => NamedElement<"coda">;
export declare const segno: (args?: Partial<Record<never, never>>) => NamedElement<"segno">;
export declare const sign: (args?: Partial<{
    value: string;
}>) => NamedElement<"sign">;
export declare const line: (args?: Partial<{
    value: number;
}>) => NamedElement<"line">;
export declare const clefOctaveChange: (args?: Partial<{
    value: number;
}>) => NamedElement<"clef-octave-change">;
export declare const beats: (args?: Partial<{
    value: string;
}>) => NamedElement<"beats">;
export declare const beatType: (args?: Partial<{
    value: string;
}>) => NamedElement<"beat-type">;
export declare const lyric: (args?: Partial<{
    number: number;
    components: Array<NamedElement<"syllabic"> | NamedElement<"text"> | NamedElement<"elision">>;
}>) => NamedElement<"lyric">;
export declare const syllabic: (args?: Partial<{
    value: string;
}>) => NamedElement<"syllabic">;
export declare const text: (args?: Partial<{
    value: string;
}>) => NamedElement<"text">;
export declare const elision: (args?: Partial<{
    value: string;
}>) => NamedElement<"elision">;
export declare const notations: (args?: Partial<{
    tieds: NamedElement<"tied">[];
    slurs: NamedElement<"slur">[];
    tuplets: NamedElement<"tuplet">[];
    arpeggiate: NamedElement<"arpeggiate">;
    ornaments: NamedElement<"ornaments">[];
    fermatas: NamedElement<"fermata">[];
    articulations: NamedElement<"articulations">[];
    accidentalMarks: NamedElement<"accidental-mark">[];
}>) => NamedElement<"notations">;
export declare const arpeggiate: (args?: Partial<{
    direction: string;
}>) => NamedElement<"arpeggiate">;
export declare const voice: (args?: Partial<{
    value: string;
}>) => NamedElement<"voice">;
export declare const staff: (args?: Partial<{
    number: number;
}>) => NamedElement<"staff">;
export declare const notehead: (args?: Partial<{
    value: string;
}>) => NamedElement<"notehead">;
export declare const chord: (args?: Partial<Record<never, never>>) => NamedElement<"chord">;
export declare const beam: (args?: Partial<{
    number: number;
    beamValue: string;
}>) => NamedElement<"beam">;
export declare const staffDetails: (args?: Partial<{
    number: number;
    staffType: NamedElement<"staff-type">;
    staffLines: NamedElement<"staff-lines">;
}>) => NamedElement<"staff-details">;
export declare const measureStyle: (args?: Partial<{
    staffNumber: number;
    multipleRest: NamedElement<"multiple-rest">;
}>) => NamedElement<"measure-style">;
export declare const multipleRest: (args?: Partial<{
    multipleRestCount: number;
}>) => NamedElement<"multiple-rest">;
export declare const staffLines: (args?: Partial<{
    value: number;
}>) => NamedElement<"staff-lines">;
export declare const staffType: (args?: Partial<{
    value: string;
}>) => NamedElement<"staff-type">;
export declare const tuplet: (args?: Partial<{
    type: string;
    placement: string;
    showNumber: string;
}>) => NamedElement<"tuplet">;
export declare const timeModification: (args?: Partial<{
    actualNotes: NamedElement<"actual-notes">;
    normalNotes: NamedElement<"normal-notes">;
}>) => NamedElement<"time-modification">;
export declare const actualNotes: (args?: Partial<{
    value: number;
}>) => NamedElement<"actual-notes">;
export declare const normalNotes: (args?: Partial<{
    value: number;
}>) => NamedElement<"normal-notes">;
export declare const slur: (args?: Partial<{
    type: string;
    placement: string;
    number: number;
    lineType: string;
}>) => NamedElement<"slur">;
export declare const tied: (args?: Partial<{
    type: string;
    placement: string;
    number: number;
    lineType: string;
}>) => NamedElement<"tied">;
export declare const wedge: (args?: Partial<{
    type: string;
    spread: number;
}>) => NamedElement<"wedge">;
export declare const ornaments: (args?: Partial<{
    contents: NamedElement<"trill-mark" | "wavy-line" | "accidental-mark">[];
}>) => NamedElement<"ornaments">;
export declare const trillMark: (args?: Partial<Record<string, never>>) => NamedElement<"trill-mark">;
export declare const wavyLine: (args?: Partial<{
    number: number;
    type: string;
}>) => NamedElement<"wavy-line">;
export declare const octaveShift: (args?: Partial<{
    type: string;
    size: number;
}>) => NamedElement<"octave-shift">;
export declare const pedal: (args?: Partial<{
    type: string;
    line: string;
    sign: string;
}>) => NamedElement<"pedal">;
export declare const container: (args?: Partial<{
    rootfiles: NamedElement<"rootfiles">;
}>) => NamedElement<"container">;
export declare const rootfiles: (args?: Partial<{
    rootfiles: NamedElement<"rootfile">[];
}>) => NamedElement<"rootfiles">;
export declare const rootfile: (args?: Partial<{
    fullPath: string;
    mediaType: string;
}>) => NamedElement<"rootfile">;
export declare const fermata: (args?: Partial<{
    shape: string;
    type: string;
}>) => NamedElement<"fermata">;
export declare const articulations: (args?: Partial<{
    accents: NamedElement<"accent">[];
    strongAccents: NamedElement<"strong-accent">[];
    staccatos: NamedElement<"staccato">[];
    tenutos: NamedElement<"tenuto">[];
    detachedLegatos: NamedElement<"detached-legato">[];
    staccatissimos: NamedElement<"staccatissimo">[];
    scoops: NamedElement<"scoop">[];
    plops: NamedElement<"plop">[];
    doits: NamedElement<"doit">[];
    falloffs: NamedElement<"falloff">[];
    breathMarks: NamedElement<"breath-mark">[];
}>) => NamedElement<"articulations">;
export declare const accent: (args?: Partial<{
    placement: string;
}>) => NamedElement<"accent">;
export declare const strongAccent: (args?: Partial<{
    placement: string;
}>) => NamedElement<"strong-accent">;
export declare const staccato: (args?: Partial<{
    placement: string;
}>) => NamedElement<"staccato">;
export declare const tenuto: (args?: Partial<{
    placement: string;
}>) => NamedElement<"tenuto">;
export declare const detachedLegato: (args?: Partial<{
    placement: string;
}>) => NamedElement<"detached-legato">;
export declare const staccatissimo: (args?: Partial<{
    placement: string;
}>) => NamedElement<"staccatissimo">;
export declare const scoop: (args?: Partial<{
    placement: string;
    lineType: string;
}>) => NamedElement<"scoop">;
export declare const plop: (args?: Partial<{
    placement: string;
    lineType: string;
}>) => NamedElement<"plop">;
export declare const doit: (args?: Partial<{
    placement: string;
    lineType: string;
}>) => NamedElement<"doit">;
export declare const falloff: (args?: Partial<{
    placement: string;
    lineType: string;
}>) => NamedElement<"falloff">;
export declare const breathMark: (args?: Partial<{
    placement: string;
}>) => NamedElement<"breath-mark">;
export declare const accidentalMark: (args?: Partial<{
    type: string;
}>) => NamedElement<"accidental-mark">;
